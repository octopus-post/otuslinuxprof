---
# Установка python-пакетов для модулей psql
- name: Install base tools
  ansible.builtin.apt:
    name:
#      - python3-pexpect.noarch
      - python3-psycopg2
      - acl
    state: present
    update_cache: true

# CREATE USER replicator WITH REPLICATION Encrypted PASSWORD 'Otus2022!';
- name: Create replicator user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: replication
    password: '{{ replicator_password }}'
    role_attr_flags: REPLICATION
  ignore_errors: true
  when: (ansible_hostname == "node1")

# Останавливаем postgresql-14 на хосте node2
- name: Stop postgresql-server on node2
  ansible.builtin.service:
    name: postgresql
    state: stopped
  when: (ansible_hostname == "node2")

# Копируем конфигурационный файл postgresql.conf
- name: Copy postgresql.conf
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/14/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node1")

# Копируем конфигурационный файл pg_hba.conf
- name: Copy pg_hba.conf
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/14/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node1")

# Перезапускаем службу  postgresql-14
- name: Restart postgresql-server on node1
  ansible.builtin.service:
    name: postgresql
    state: restarted
  when: (ansible_hostname == "node1")

# Удаляем содержимое каталога /var/lib/postgresql/14/main/
- name: Remove files from data catalog
  ansible.builtin.file:
    path: /var/lib/postgresql/14/main/
    state: absent
  when: (ansible_hostname == "node2")

# Копируем данные с node1 на node2
- name: Copy files from master to slave
  become: true
  become_user: postgres
  ansible.builtin.expect:
    command: 'pg_basebackup -h {{ master_ip }} -U  replication -p 5432 -D /var/lib/postgresql/14/main/ -R -P'
    responses:
      '.*Password*': "{{ replicator_password }}"
  when: (ansible_hostname == "node2")

# Копируем конфигурационный файл postgresql.conf
- name: Copy postgresql.conf
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/14/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node2")

# Копируем конфигурационный файл pg_hba.conf
- name: Copy pg_hba.conf
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/14/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node2")

# Запускаем службу postgresql-14 на хосте node2
- name: Start postgresql-server on node2
  ansible.builtin.service:
    name: postgresql
    state: started
  when: (ansible_hostname == "node2")
