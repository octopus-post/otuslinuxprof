---
- name: Create dir
  become: true
  ansible.builtin.file:
    path: /etc/ssl/{{ ansible_hostname }}
    state: directory
    mode: '0755'

- name: Check kibana cert status
  ansible.builtin.stat:
    path: "{{ ssl_keys_path }}/crt/{{ ansible_hostname }}.loc.crt"
  register: reg_cert_status

- name: Copy kibana SSL certificate file
  ansible.builtin.copy:
    src: "{{ ssl_keys_path }}/crt/{{ ansible_hostname }}.loc.crt"
    dest: "/etc/ssl/{{ ansible_hostname }}/{{ ansible_hostname }}.loc.crt"
    mode: '0644'
    owner: root
    group: root
    remote_src: true
  when: reg_cert_status.stat.exists

- name: Copy kibana SSL private key file
  ansible.builtin.copy:
    src: "{{ ssl_keys_path }}/private/{{ ansible_hostname }}.loc.key"
    dest: "/etc/ssl/{{ ansible_hostname }}/{{ ansible_hostname }}.loc.key"
    mode: '0644'
    owner: root
    group: root
    remote_src: true
  when: reg_cert_status.stat.exists

- name: Install a kibana-8.9.1-amd64 package
  ansible.builtin.apt:
    deb: "{{ distrib_path }}/elk-8.9-deb/kibana-{{ elk_version }}-amd64.deb"
    state: present

- name: Delete line elasticsearch.hosts
  ansible.builtin.lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '^elasticsearch.hosts:'
    line: '#'

- name: Config Kibana
  ansible.builtin.blockinfile:
    path: /etc/kibana/kibana.yml
    block: "{{ kibana_config }}"
    marker: "# {mark} Kibana configuration"
    backup: true

- name: Start kibana
  ansible.builtin.systemd:
    name: kibana
    daemon-reload: true
    enabled: true
    state: restarted
