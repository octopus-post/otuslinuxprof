# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"
$global_box_name="ubuntu/jammy64"

MACHINES = {
  :server => {
        :box_name => $global_box_name,
        :vm_name => "server.loc",
        :net => [
                   ['192.168.56.10',  5, "255.255.255.0"],
                ]
  },

  :client => {
        :box_name => $global_box_name,
        :vm_name => "client.loc",
        :net => [
                  ['192.168.56.20',  5, "255.255.255.0"],
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    
    config.vm.define boxname do |box|
   
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
        boxconfig[:net].each do |ipconf|
          box.vm.network("private_network" \
                    , ip: ipconf[0] \
                    , virtualbox__netmask: ipconf[2] \
                    )        
        end
      # Ansible playbook TUN/TAP
      if boxconfig[:vm_name] == "client.loc"
        box.vm.provision "ansible" do |ansible|
        ansible.playbook = "ansible/provision_tun_tap.yml"
        ansible.inventory_path = "ansible/hosts"
        ansible.host_key_checking = "false"
        ansible.limit = "all"
        end
      end    
      ## Ansible playbook RAS over OVPN    
      # if boxconfig[:vm_name] == "server.loc"
      #   box.vm.provision "ansible" do |ansible|
      #   ansible.playbook = "ansible/provision_ras.yml"
      #   ansible.inventory_path = "ansible/hosts"
      #   ansible.host_key_checking = "false"
      #   ansible.limit = "all"
      #   end
      # end
    end
  end
end
