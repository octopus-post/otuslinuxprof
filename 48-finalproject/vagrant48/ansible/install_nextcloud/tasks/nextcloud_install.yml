---
- name: Delete nextcloud dir
  ansible.builtin.file:
    path: "{{ nextcloud_data_dir }}"
    state: absent

- name: Download file with check (sha256)
  ansible.builtin.get_url:
    url: https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version }}.zip
    dest: /vagrant/backups/dst/nextcloud/nextcloud-{{ nextcloud_version }}.zip
    checksum: '{{ nextcloud_distr_checksum_sha256 }}'
    mode: "0600"
  register: reg_path_to_distrib

- name: Print result check
  ansible.builtin.debug:
    msg: "{{ reg_path_to_distrib.dest }}"

- name: Check nextcloud dir existence on remote host
  ansible.builtin.stat:
    path: /var/www/nextcloud
  register: reg_dir_info

- name: Print result check
  ansible.builtin.debug:
    msg: "Path not exists | reg_dir_info.stat.isdir: {{ (reg_dir_info.stat.isdir | default(False)) }} | reg_dir_info.stat.exists: {{ reg_dir_info.stat.exists }}"
  when:
    - not reg_dir_info.stat.isdir | default(False)

- name: Unarchive a file when nextcloud dir is not exists
  ansible.builtin.unarchive:
    src: "{{ reg_path_to_distrib.dest }}"
    dest: /var/www/
    remote_src: true
  when: not (reg_dir_info.stat.isdir | default(False)) 

- name: Change permissions
  ansible.builtin.file:
    path: /var/www/nextcloud
    owner: www-data
    group: www-data
    mode: '0755'
    recurse: true
  notify:
    - "Restart nginx"
    - "Restart php"

- name: Check NC server status
  ansible.builtin.stat:
    path: /var/www/nextcloud/config/CAN_INSTALL
  register: reg_nc_status

- name: Get status info
  ansible.builtin.debug:
    msg: "{{ reg_nc_status.stat.exists }}"

- name: Initial NC-server
  become: true
  ansible.builtin.shell:
    cmd: "sudo -u www-data php /var/www/nextcloud/occ  \
        maintenance:install \
        --data-dir='{{ nextcloud_data_dir }}/data' \
        --database='mysql' \
        --database-name='{{ nextcloud_db }}' \
        --database-user='{{ nextcloud_user }}' \
        --database-pass='{{ nextcloud_password }}' \
        --admin-user='admin' \
        --admin-pass='{{ nextcloud_password }}'"
  when: reg_nc_status.stat.exists

- name: Check NC server status
  ansible.builtin.stat:
    path: /var/www/nextcloud/config/CAN_INSTALL
  register: reg_nc_status

- name: Add trusted_domains in conf
  ansible.builtin.shell:
    cmd: "sudo -u www-data php /var/www/nextcloud/occ \
        config:system:set \
        trusted_domains 1 \
        --value='{{ ansible_host }}'"
  when: not reg_nc_status.stat.exists

- name: Add trusted_domains in conf
  ansible.builtin.shell:
    cmd: "sudo -u www-data php /var/www/nextcloud/occ \
        config:system:set \
        trusted_domains 2 \
        --value='nextcloud.loc'"
  when: not reg_nc_status.stat.exists
