# -*- mode: ruby -*-
# vim: set ft=ruby :
ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"
#$global_box_name="centos/stream8" 
$global_box_name="ubuntu/jammy64"


MACHINES = {
  :inetRouter => {
        :box_name => $global_box_name, # "centos/stream8"
#        :box_version => "20210210.0",
        :vm_name => "inetRouter",
        :net => [
                #    {:adapter => 2, :ip => '192.168.255.1', :netmask => '255.255.255.252',   :auto_config => true, :virtualbox__intnet => "router-net"},
                #    {:adapter => 3,                                                          :auto_config => true, :virtualbox__intnet => "router-net"},
                #    {:adapter => 2, :auto_config => true, :virtualbox__intnet => "router-net"},
                #    {:adapter => 3, :auto_config => true}, #, :virtualbox__intnet => "router-net"},                   
                    {:adapter => 2, :ip => '192.168.255.5', :netmask => '255.255.255.0', :auto_config => true, :virtualbox__intnet => "router-net"},
                    {:adapter => 3, :ip => '192.168.255.5', :netmask => '255.255.255.0', :auto_config => false, :virtualbox__intnet => "router-net"},                                   
                    {:adapter => 8, :ip => '192.168.56.10', :netmask => '255.255.255.0', :auto_config => true},
                ]
  },
   :centralRouter => {
         :box_name => $global_box_name,
# #        :box_version => "20210210.0",
         :vm_name => "centralRouter",
         :net => [
#                    {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
#                    {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
                    {:adapter => 2, :ip => '192.168.255.6', :netmask => "255.255.255.0", :auto_config => true, :virtualbox__intnet => "router-net"},
                    {:adapter => 3, :ip => '192.168.255.6', :netmask => "255.255.255.0", :auto_config => false, :virtualbox__intnet => "router-net"},
                    {:adapter => 6, :ip => '192.168.255.9', :netmask => "255.255.255.0", :auto_config => true, :virtualbox__intnet => "office1-central"},
                    {:adapter => 8, :ip => '192.168.56.11', :netmask => '255.255.255.0', :auto_config => true},
                 ]
   },

   :office1Router => {
         :box_name => $global_box_name,
# #        :box_version => "20210210.0",
         :vm_name => "office1Router",
         :net => [
                    {:adapter => 2, :ip => '192.168.255.10',  :netmask => "255.255.255.252", :auto_config => true, :virtualbox__intnet => "office1-central"},
                    {:adapter => 3, :ip => '10.10.11.10',  :netmask => "255.255.255.252", :auto_config => true, :virtualbox__intnet => "vlan1"},
                    {:adapter => 4, :ip => '10.10.11.11',  :netmask => "255.255.255.252", :auto_config => true, :virtualbox__intnet => "vlan1"},
                    {:adapter => 5, :ip => '10.10.12.10',  :netmask => "255.255.255.252", :auto_config => true, :virtualbox__intnet => "vlan2"},
                    {:adapter => 6, :ip => '10.10.12.11',  :netmask => "255.255.255.252", :auto_config => true, :virtualbox__intnet => "vlan2"},
#                    [adapter: 3, auto_config: false, virtualbox__intnet: "vlan1"],
#                    [adapter: 4, auto_config: false, virtualbox__intnet: "vlan1"],
#                    [adapter: 5, auto_config: false, virtualbox__intnet: "vlan2"],
#                    [adapter: 6, auto_config: false, virtualbox__intnet: "vlan2"],
                    {:adapter => 8, :ip => '192.168.56.20', :netmask => '255.255.255.0',   :auto_config => true},
                 ]
   },

  :testClient1 => {
        :box_name => $global_box_name,
#        :box_version => "20210210.0",
        :vm_name => "testClient1",
        :net => [
                   {:adapter => 2, :ip => '192.168.1.11',  :netmask => "255.255.255.0", :auto_config => true, :virtualbox__intnet => "testLAN"},
                   {:adapter => 8, :ip => '192.168.56.21', :netmask => '255.255.255.0', :auto_config => true},
                ]
  },

  :testServer1 => {
        :box_name => $global_box_name,
#        :box_version => "20210210.0",
        :vm_name => "testServer1",
        :net => [
                  {:adapter => 2, :ip => '192.168.1.12',  :netmask => "255.255.255.0", :auto_config => true, :virtualbox__intnet => "testLAN"},
                  {:adapter => 8, :ip => '192.168.56.22', :netmask => '255.255.255.0', :auto_config => true},
            ]
  },

  :testClient2 => {
        :box_name => "ubuntu/jammy64",
#        :box_version => "20220411.2.0",
        :vm_name => "testClient2",
        :net => [
                  {:adapter => 2, :ip => '192.168.1.13',  :netmask => "255.255.255.0", :auto_config => true, :virtualbox__intnet => "testLAN"},
                  {:adapter => 8, :ip => '192.168.56.31', :netmask => '255.255.255.0', :auto_config => true},
                ]
  },

  :testServer2 => {
        :box_name => "ubuntu/jammy64",
#        :box_version => "20220411.2.0",
        :vm_name => "testServer2",
        :net => [
                  {:adapter => 2, :ip => '192.168.1.14',  :netmask => "255.255.255.0", :auto_config => true, :virtualbox__intnet => "testLAN"},
                  {:adapter => 8, :ip => '192.168.56.32', :netmask => '255.255.255.0', :auto_config => true},
                ]
  },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    
    config.vm.define boxname do |box|
   
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
#      box.vm.box_version = boxconfig[:box_version]

      config.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 2
       end

      if boxconfig[:vm_name] == "testServer2"
       box.vm.provision "ansible" do |ansible|
        ansible.playbook = "ansible/provision.yml"
        ansible.inventory_path = "ansible/hosts"
        ansible.host_key_checking = "false"
        ansible.become = "true"
        ansible.limit = "all"
       end
      end

      boxconfig[:net].each do |ipconf|
        #box.vm.network "private_network", ipconf
        box.vm.network("private_network", 
                    adapter: ipconf[:adapter], 
                    ip: ipconf[:ip],
                    auto_config: ipconf[:auto_config],
                    virtualbox__netmask: ipconf[:netmask],
                    virtualbox__intnet: ipconf[:virtualbox__intnet]
                    )        
      end

      box.vm.provision "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
        cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL
    end
  end
end