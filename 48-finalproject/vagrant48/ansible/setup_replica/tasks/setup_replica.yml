---
- name: Start mysql
  ansible.builtin.systemd:
    name: mysql
    state: started

- name: Configure mysql replica
  ansible.builtin.template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: "Restart mysql-server"

- name: Restart mysql
  ansible.builtin.systemd:
    name: mysql
    state: restarted

- name: Stop mysql replica thread
  community.mysql.mysql_replication:
    mode: stopreplica
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Reset mysql replica thread
  community.mysql.mysql_replication:
    mode: resetreplicaall
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Run RESET MASTER command which will delete all existing binary log files and reset the binary log index file on the primary
  community.mysql.mysql_replication:
    mode: resetprimary
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Restore database
  community.mysql.mysql_db:
    name: all
    state: import
    target: "{{ backup_dir }}/{{ source_hostname }}/{{ dumpfile_name }}" # mysqldump_{{ source_hostname }}_{{ ansible_date_time.date }}.sql
    login_unix_socket: /var/run/mysqld/mysqld.sock
- ansible.builtin.debug:
    msg: "{{ backup_dir }}/{{ source_hostname }}/{{ dumpfile_name }}"


# - name: Reset mysql replica thread
#   community.mysql.mysql_replication:
#     mode: resetreplicaall
#     login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Add to Change replication source to replica server
#  command: mysql -e "CHANGE REPLICATION SOURCE TO SOURCE_HOST='{{ mysql_source_host_ip }}', SOURCE_USER='{{ mysql_replica_user }}', SOURCE_PASSWORD='{{ mysql_replica_user_password }}', SOURCE_AUTO_POSITION = 1, GET_SOURCE_PUBLIC_KEY = 1;"
  command: mysql -e "CHANGE REPLICATION SOURCE TO SOURCE_HOST='{{ hostvars[source_hostname]['ansible_host']}}', SOURCE_USER='{{ mysql_replica_user }}', SOURCE_PASSWORD='{{ mysql_replica_user_password }}', SOURCE_AUTO_POSITION = 1, GET_SOURCE_PUBLIC_KEY = 1;"
- ansible.builtin.debug:
    msg: "{{ hostvars[source_hostname]['ansible_host']}}"
- name: Start mysql replica thread
  community.mysql.mysql_replication:
    mode: startreplica
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Copy backup script
  ansible.builtin.template:
    src: create_mysqlrepl_backup.sh
    dest: /var/lib/mysql/create_mysqlrepl_backup.sh
    owner: root
    mode: '0655'

- name: Add backup script to cron
  ansible.builtin.cron:
    name: Run script every day
    minute: '*/5'
#    minute: "0"
#    hour: "0"
    job: '/var/lib/mysql/create_mysqlrepl_backup.sh'
    user: root
    state: present
