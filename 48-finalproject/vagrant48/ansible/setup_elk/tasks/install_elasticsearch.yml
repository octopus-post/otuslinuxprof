---

# - name: Create elastic user
#   ansible.builtin.user:
#     name: elastic
#     create_home: false
#     shell: /bin/false

- name: Install a elasticsearch-8.9.1-amd64 package
  ansible.builtin.apt:
    deb: "{{ distrib_path }}/elk-8.9-deb/elasticsearch-{{ elk_version }}-amd64.deb"
    state: present
  # notify:
  #    - "Start elasticsearch"
# - name: Config Elasticsearch
#   vars:
#     elasticsearch_config: |
#       network.host: {{ ansible_host }}
#       xpack.ml.enabled: false
#   ansible.builtin.blockinfile:
#     path: /etc/elasticsearch/elasticsearch.yml
#     block: "{{ elasticsearch_config }}"
#     marker: "# {mark} Elasticsearch configuration"
#     backup: true

- name: Set up elasticsearch server
  ansible.builtin.template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    mode: "0644"
    owner: root

# - name: Start elasticsearch
#   ansible.builtin.systemd:
#     name: elasticsearch
#     daemon-reload: true
#     enabled: true
#     state: started

- name: Set up jvm
  ansible.builtin.template:
    src: elasticsearch_jvm.option.j2
    dest: /etc/elasticsearch/jvm.options.d/jvm.options
    mode: "0644"
    owner: root

# - name: Run password reset
#   command: "/usr/share/elasticsearch/bin/elasticsearch-reset-password -u {{ elastic_user }} -i"
#   args:
#     stdin: "y\n{{ elastic_password }}\n{{ elastic_password }}\n"

# - name: Display the elastic cluster password.
#   ansible.builtin.debug:
#     msg: "New password: {{ elastic_password }}"

- name: Restart elasticsearch
  ansible.builtin.systemd:
    name: elasticsearch
    daemon-reload: true
    state: restarted

# - name: Reset the password of the elastic built-in superuser with
#   ansible.builtin.shell:
#     cmd: '/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -b'
#   register: reg_elastic_pass

# - name: Reset elasticsearch_user password
#   ansible.builtin.debug:
#     msg: "{{ reg_elastic_pass.stdout_lines[-1] }}"

# - name: Push password
#   vars:
#     my_password: "{{ reset_cmd.stdout_lines[-1]
#       | regex_replace('^New value: (.*)$', '\\1') }}"


# - name: Generate an enrollment token for Kibana instances with
#   ansible.builtin.shell:
#     cmd: '/usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana'

# - name: Generate an enrollment token for Elasticsearch nodes with
#   ansible.builtin.shell:
#     cmd: '/usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s node'
