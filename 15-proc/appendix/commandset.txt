Системные вызовы:
    - fork() создание процесса (единственный способ создания процесс)
        |- parent proc (код возврата равный PID дочернего процесса)
        |- child proc (дочернему возвращает 0)
        стартует в одном процессе, завершается в двух
    0:32 

    - exec() загрузка (запуск) программы в процесс
    - exit() не завершает процесс, теперь есть возможность прочитать status - код возврата. Только родитель может считать код возврата 
        *
    - wait() считывание кода возврата процесса
        после получения от потомка кода возврата, процесс перестает существовать

Состояния процесса:
    - R выполняется (самый кратковременный)
    - S ожидание
    - D ожидание ввода-вывода
    - T процесс остановлен
    - Z зомби (состояние между exit() и wait())
        |- обязательное состояние любого процесса
        |- не потребляют ресурсов
        |- его нельзя завершить


Демон - процесс, работающий в фоне без прямого взаимодействия с пользователем

kthreadd - родитель потоков в пространстве ядра
[] - потоки ядра 
ps -efl
1:27 - разбор процессов, каталог PROC 
lsof - ифн об открытых файлах
ls -l /proc 
1:30 - 1:50 для ДЗ

strace - все системные вызовы 