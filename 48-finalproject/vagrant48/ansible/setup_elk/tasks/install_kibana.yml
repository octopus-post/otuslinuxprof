---
- name: Create dir
  become: true
  ansible.builtin.file:
    path: /etc/ssl/{{ ansible_hostname }}
    state: directory
    mode: '0755'

- name: Check kibana cert status
  ansible.builtin.stat:
    path: "{{ ssl_keys_path }}/crt/{{ ansible_hostname }}.loc.crt"
  register: reg_cert_status

- name: Copy kibana SSL certificate file
  ansible.builtin.copy:
    src: "{{ ssl_keys_path }}/crt/{{ ansible_hostname }}.loc.crt"
    dest: "/etc/ssl/{{ ansible_hostname }}/{{ ansible_hostname }}.loc.crt"
    mode: '0644'
    owner: root
    group: root
    remote_src: true
  when: reg_cert_status.stat.exists

- name: Copy kibana SSL private key file
  ansible.builtin.copy:
    src: "{{ ssl_keys_path }}/private/{{ ansible_hostname }}.loc.key"
    dest: "/etc/ssl/{{ ansible_hostname }}/{{ ansible_hostname }}.loc.key"
    mode: '0644'
    owner: root
    group: root
    remote_src: true
  when: reg_cert_status.stat.exists

- name: Install a kibana-8.9.1-amd64 package
  ansible.builtin.apt:
    deb: "{{ distrib_path }}/elk-8.9-deb/kibana-{{ elk_version }}-amd64.deb"
    state: present

# - name: Set up kibana
#   ansible.builtin.template:
#     src: kibana.yml.j2
#     dest: /etc/kibana/kibana.yml
#     mode: "0644"
#     owner: root

# - name: Reset the password of the kibana_system 
#   ansible.builtin.shell:
#     cmd: '/usr/share/elasticsearch/bin/elasticsearch-reset-password -u kibana_system'

# - name: Generate enrollment token for Kibana nodes.
#   ansible.builtin.shell: /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana
#   register: reg_kibana_token_node
# #  when: inventory_hostname in groups["master-elk-server"]

# - name: Display the Kibana token
#   ansible.builtin.debug:
#     msg: "Kibana Token: {{ reg_kibana_token_node.stdout }}"
# #  when: inventory_hostname in groups["master-elk-server"]

# ########################################################
# # (optional) Enable If Kibana only has 1 node.
# #
# - name: Register/Enrolling kibana
#   ansible.builtin.shell: /usr/share/kibana/bin/kibana-setup --enrollment-token {{ reg_kibana_token_node.stdout }}
# #    when: inventory_hostname in groups["kibana-server"]
# ########################################################

# - name: Add Kibana token
#   ansible.builtin.blockinfile:
#     path: /etc/kibana/kibana.yml
#     block: "elasticsearch.serviceAccountToken: '{{ reg_kibana_token_node.stdout }}'"
#     marker: "# {mark} Kibana configuration"
#     backup: true


- name: Delete line elasticsearch.hosts
  ansible.builtin.lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '^elasticsearch.hosts:'
    line: '#'
#  when: inventory_hostname in groups["kibana-server"]

- name: Config Kibana
  ansible.builtin.blockinfile:
    path: /etc/kibana/kibana.yml
    block: "{{ kibana_config }}"
    marker: "# {mark} Kibana configuration"
    backup: true



# - name: Copy ssl certs
#   ansible.builtin.copy:
#     src: /etc/elasticsearch/certs
#     dest: /etc/kibana/
#     owner: root
#     group: kibana
#     mode: '0600'
#     remote_src: true
#     directory_mode: true

- name: Start kibana
  ansible.builtin.systemd:
    name: kibana
    daemon-reload: true
    enabled: true
    state: restarted

# apt install kibana
# systemctl daemon-reload
# systemctl enable kibana.service
# systemctl start kibana.service
# /usr/share/elasticsearch/bin/elasticsearch-reset-password -u kibana_system
# cp -R /etc/elasticsearch/certs /etc/kibana
# chown -R root:kibana /etc/kibana/certs
